//ques1

import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

class Complex {
    private int real;
    private int imaginary;

    public Complex() {
        this.real = 0;
        this.imaginary = 0;
    }

    public Complex(int real, int imaginary) {
        this.real = real;
        this.imaginary = imaginary;
    }

    public void mulComplex(Complex num) {
        int newReal = (this.real * num.real) - (this.imaginary * num.imaginary);
        int newImaginary = (this.real * num.imaginary) + (this.imaginary * num.real);
        this.real = newReal;
        this.imaginary = newImaginary;
    }

    public void display() {
        if (imaginary < 0) {
            System.out.println(real + "" + imaginary + "i");
        } else {
            System.out.println(real + "+" + imaginary + "i");
        }
    }
}

public class Test_Complex {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

        // Read the first complex number
        int real1 = input.nextInt();
        int imaginary1 = input.nextInt();
        Complex num1 = new Complex(real1, imaginary1);

        // Read the second complex number
        int real2 = input.nextInt();
        int imaginary2 = input.nextInt();
        Complex num2 = new Complex(real2, imaginary2);

        // Multiply the two complex numbers
        num1.mulComplex(num2);

        // Display the result
        num1.display();

        input.close();
    }
}






//ques2


import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;
import java.util.Scanner;

class Circle {
    private double radius;

    public Circle(double radius) {
        this.radius = Math.max(radius, 0.0); // radius cannot be negative
    }

    public double getArea() {
        return 3.14 * radius * radius;
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

        int n = input.nextInt();
        if (n < 1) {
            System.out.println("Invalid input");
        } else {
            Circle[] circles = new Circle[n];
            for (int i = 0; i < n; i++) {
                double radius = Math.max(input.nextDouble(), 0.0); // radius cannot be negative
                circles[i] = new Circle(radius);
            }
            for (Circle circle : circles) {
                if (circle.getArea() > 30.0) {
                    System.out.printf("%.4f\n", circle.getArea());
                }
            }
        }

      input.close();
    }
}
